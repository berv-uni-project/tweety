name: Docker
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
env:
  IMAGE_NAME: tweety
jobs:
  build_test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true
      - name: Restore Dependencies
        run: dotnet restore
      - name: Build All
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-restore --no-build --configuration Release
  docker_test:
    runs-on: ubuntu-20.04
    needs: build_test
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Build Image
        run: docker build . -t $IMAGE_NAME
  build_push_image:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    needs: build_test
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            berviantoleo/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
